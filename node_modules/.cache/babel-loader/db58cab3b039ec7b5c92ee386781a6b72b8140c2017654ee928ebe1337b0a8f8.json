{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/a11/homely/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport { getAuth, RecaptchaVerifier, signInWithPhoneNumber, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';\nimport React, { useState } from 'react';\nimport { auth } from '../firebase/firebaseConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [verificationId, setVerificationId] = useState(null);\n  const handleSignup = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n        size: 'invisible',\n        callback: response => {\n          console.log('Recaptcha solved:', response);\n        },\n        'expired-callback': () => {\n          console.log('Recaptcha expired');\n        }\n      }, auth);\n    }\n    const appVerifier = window.recaptchaVerifier;\n    signInWithPhoneNumber(auth, phone, appVerifier).then(confirmationResult => {\n      setVerificationId(confirmationResult.verificationId);\n      alert('OTP sent to your phone');\n    }).catch(error => {\n      console.error('Error during phone sign-up:', error);\n    });\n  };\n  const handleVerifyOtp = () => {\n    if (verificationId) {\n      const credential = PhoneAuthProvider.credential(verificationId, otp);\n      signInWithCredential(auth, credential).then(result => {\n        console.log('User logged in:', result.user);\n      }).catch(error => {\n        console.error('Error verifying OTP:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter phone number\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), verificationId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n_s(Signup, \"HQYTSZj8E1o5J9IRXoLSnfUZwCc=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["getAuth","RecaptchaVerifier","signInWithPhoneNumber","PhoneAuthProvider","signInWithCredential","React","useState","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","phone","setPhone","otp","setOtp","verificationId","setVerificationId","handleSignup","window","recaptchaVerifier","size","callback","response","console","log","expired-callback","appVerifier","then","confirmationResult","alert","catch","error","handleVerifyOtp","credential","result","user","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","_c","$RefreshReg$"],"sources":["/home/user/Documents/a11/homely/src/pages/Signup.js"],"sourcesContent":["import {\n    getAuth,\n    RecaptchaVerifier,\n    signInWithPhoneNumber,\n    PhoneAuthProvider,\n    signInWithCredential,\n  } from 'firebase/auth';\n  import React, { useState } from 'react';\n  import { auth } from '../firebase/firebaseConfig';\n  \n  const Signup = () => {\n    const [phone, setPhone] = useState('');\n    const [otp, setOtp] = useState('');\n    const [verificationId, setVerificationId] = useState(null);\n  \n    const handleSignup = () => {\n      if (!window.recaptchaVerifier) {\n        window.recaptchaVerifier = new RecaptchaVerifier(\n          'recaptcha-container',\n          {\n            size: 'invisible',\n            callback: (response) => {\n              console.log('Recaptcha solved:', response);\n            },\n            'expired-callback': () => {\n              console.log('Recaptcha expired');\n            },\n          },\n          auth\n        );\n      }\n  \n      const appVerifier = window.recaptchaVerifier;\n  \n      signInWithPhoneNumber(auth, phone, appVerifier)\n        .then((confirmationResult) => {\n          setVerificationId(confirmationResult.verificationId);\n          alert('OTP sent to your phone');\n        })\n        .catch((error) => {\n          console.error('Error during phone sign-up:', error);\n        });\n    };\n  \n    const handleVerifyOtp = () => {\n      if (verificationId) {\n        const credential = PhoneAuthProvider.credential(verificationId, otp);\n        signInWithCredential(auth, credential)\n          .then((result) => {\n            console.log('User logged in:', result.user);\n          })\n          .catch((error) => {\n            console.error('Error verifying OTP:', error);\n          });\n      }\n    };\n  \n    return (\n      <div>\n        <h2>Signup</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n        />\n        <button onClick={handleSignup}>Send OTP</button>\n  \n        {verificationId && (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Enter OTP\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n            />\n            <button onClick={handleVerifyOtp}>Verify OTP</button>\n          </>\n        )}\n  \n        <div id=\"recaptcha-container\"></div>\n      </div>\n    );\n  };\n  \n  export default Signup;\n  "],"mappings":";;AAAA,SACIA,OAAO,EACPC,iBAAiB,EACjBC,qBAAqB,EACrBC,iBAAiB,EACjBC,oBAAoB,QACf,eAAe;AACtB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACC,MAAM,CAACC,iBAAiB,EAAE;MAC7BD,MAAM,CAACC,iBAAiB,GAAG,IAAIrB,iBAAiB,CAC9C,qBAAqB,EACrB;QACEsB,IAAI,EAAE,WAAW;QACjBC,QAAQ,EAAGC,QAAQ,IAAK;UACtBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;QAC5C,CAAC;QACD,kBAAkB,EAAEG,CAAA,KAAM;UACxBF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAClC;MACF,CAAC,EACDpB,IACF,CAAC;IACH;IAEA,MAAMsB,WAAW,GAAGR,MAAM,CAACC,iBAAiB;IAE5CpB,qBAAqB,CAACK,IAAI,EAAEO,KAAK,EAAEe,WAAW,CAAC,CAC5CC,IAAI,CAAEC,kBAAkB,IAAK;MAC5BZ,iBAAiB,CAACY,kBAAkB,CAACb,cAAc,CAAC;MACpDc,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,cAAc,EAAE;MAClB,MAAMkB,UAAU,GAAGjC,iBAAiB,CAACiC,UAAU,CAAClB,cAAc,EAAEF,GAAG,CAAC;MACpEZ,oBAAoB,CAACG,IAAI,EAAE6B,UAAU,CAAC,CACnCN,IAAI,CAAEO,MAAM,IAAK;QAChBX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,MAAM,CAACC,IAAI,CAAC;MAC7C,CAAC,CAAC,CACDL,KAAK,CAAEC,KAAK,IAAK;QAChBR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACflC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEhC,KAAM;MACbiC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlC,OAAA;MAAQyC,OAAO,EAAE9B,YAAa;MAAAmB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE/CzB,cAAc,iBACbT,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBACE9B,OAAA;QACEmC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAE9B,GAAI;QACX+B,QAAQ,EAAGC,CAAC,IAAK/B,MAAM,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFlC,OAAA;QAAQyC,OAAO,EAAEf,eAAgB;QAAAI,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACrD,CACH,eAEDlC,OAAA;MAAK0C,EAAE,EAAC;IAAqB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAzEID,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AA2EZ,eAAeA,MAAM;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}